# Module: speedtest
# Description: Checks internet download and upload speed.
# Usage: !speedtest
# Dependencies: speedtest


import asyncio, configs, lib.speedtest_modified as speedtest
from logging import root

servers = []
threads = None
s = speedtest.Speedtest()




async def speedtest(ctx):
    results_dict=""
    speedtestMSG=await ctx.send("🌐 Finding optimal server...")
    s.get_servers(servers)
    s.get_best_server()
    await speedtestMSG.edit(content="⚡ Checking your Network speed...", delete_after=1)
    await asyncio.sleep(1.3)
    speedtestMSG= await ctx.send("⏬ Testing **Download** speed...")
    s.download(threads=threads)
    await speedtestMSG.edit(content="⏫ Testing **Upload** speed...")
    s.upload(threads=threads)
    await speedtestMSG.edit(content="😎 Results are almost ready!", delete_after=1.2)
    s.results.share()
    results_dict = s.results.dict()
    print(f"Speedtest Results generated by Speedtest-cli using Reco:")
    print(results_dict)



    if configs.operating_sys == "Windows":
        await ctx.send(s.results.share())
    elif configs.operating_sys == "Linux":
        await ctx.send(s.results.share())  
    else:
        await ctx.send("In Reco, Speedtest feature is currently not available for this platform.")
        await asyncio.sleep(3)
